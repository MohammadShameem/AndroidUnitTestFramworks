// Generated by dagger.internal.codegen.ComponentProcessor (https://google.github.io/dagger).
package com.zl.weilu.androidut.dagger.base;

import android.support.v4.app.Fragment;
import com.zl.weilu.androidut.mvp.base.BaseMVPPresenter;
import com.zl.weilu.androidut.mvp.base.MvpView;
import dagger.MembersInjector;
import dagger.android.DispatchingAndroidInjector;
import dagger.android.support.DaggerAppCompatActivity_MembersInjector;
import javax.inject.Provider;

public final class BaseMVPDaggerActivity_MembersInjector<
        V extends MvpView, T extends BaseMVPPresenter<V>>
    implements MembersInjector<BaseMVPDaggerActivity<V, T>> {
  private final Provider<DispatchingAndroidInjector<Fragment>> supportFragmentInjectorProvider;

  private final Provider<DispatchingAndroidInjector<android.app.Fragment>>
      frameworkFragmentInjectorProvider;

  private final Provider<T> mPresenterProvider;

  public BaseMVPDaggerActivity_MembersInjector(
      Provider<DispatchingAndroidInjector<Fragment>> supportFragmentInjectorProvider,
      Provider<DispatchingAndroidInjector<android.app.Fragment>> frameworkFragmentInjectorProvider,
      Provider<T> mPresenterProvider) {
    this.supportFragmentInjectorProvider = supportFragmentInjectorProvider;
    this.frameworkFragmentInjectorProvider = frameworkFragmentInjectorProvider;
    this.mPresenterProvider = mPresenterProvider;
  }

  public static <V extends MvpView, T extends BaseMVPPresenter<V>>
      MembersInjector<BaseMVPDaggerActivity<V, T>> create(
          Provider<DispatchingAndroidInjector<Fragment>> supportFragmentInjectorProvider,
          Provider<DispatchingAndroidInjector<android.app.Fragment>>
              frameworkFragmentInjectorProvider,
          Provider<T> mPresenterProvider) {
    return new BaseMVPDaggerActivity_MembersInjector<V, T>(
        supportFragmentInjectorProvider, frameworkFragmentInjectorProvider, mPresenterProvider);
  }

  @Override
  public void injectMembers(BaseMVPDaggerActivity<V, T> instance) {
    DaggerAppCompatActivity_MembersInjector.injectSupportFragmentInjector(
        instance, supportFragmentInjectorProvider.get());
    DaggerAppCompatActivity_MembersInjector.injectFrameworkFragmentInjector(
        instance, frameworkFragmentInjectorProvider.get());
    injectMPresenter(instance, mPresenterProvider.get());
  }

  public static <V extends MvpView, T extends BaseMVPPresenter<V>> void injectMPresenter(
      BaseMVPDaggerActivity<V, T> instance, T mPresenter) {
    instance.mPresenter = mPresenter;
  }
}

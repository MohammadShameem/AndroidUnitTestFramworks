// Generated by dagger.internal.codegen.ComponentProcessor (https://google.github.io/dagger).
package com.zl.weilu.androidut.dagger.base.module;

import android.content.Context;
import com.zl.weilu.androidut.MyApp;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

public final class AppModule_ProvideContextFactory implements Factory<Context> {
  private final AppModule module;

  private final Provider<MyApp> mApplicationProvider;

  public AppModule_ProvideContextFactory(AppModule module, Provider<MyApp> mApplicationProvider) {
    this.module = module;
    this.mApplicationProvider = mApplicationProvider;
  }

  @Override
  public Context get() {
    return Preconditions.checkNotNull(
        module.provideContext(mApplicationProvider.get()),
        "Cannot return null from a non-@Nullable @Provides method");
  }

  public static Factory<Context> create(AppModule module, Provider<MyApp> mApplicationProvider) {
    return new AppModule_ProvideContextFactory(module, mApplicationProvider);
  }

  public static Context proxyProvideContext(AppModule instance, MyApp mApplication) {
    return instance.provideContext(mApplication);
  }
}
